Vulnerability Protection Profiles
=================================

Vulnerability protection profiles define settings for vulnerability detection and prevention. They specify how the firewall should handle traffic that may exploit known vulnerabilities.

File Location
-------------

Vulnerability protection profiles are defined in JSON or YAML files located in:

.. code-block:: text

   ngfw/objects/security profiles/vulnerability protection/

This path is defined in the ``settings.py`` module as ``SECURITY_PROFILES_VULNERABILITY_FOLDER``.

File Format
-----------

Vulnerability protection profiles can be defined in either JSON or YAML format. Each file represents a single vulnerability protection profile with settings for different threat severities and actions.

JSON Example
------------

.. code-block:: json

    {
        "entry": {
            "@name": "VPP-default",
            "rules": {
                "entry": [
                    {
                        "@name": "Block-Critical-High",
                        "threat-name": "any",
                        "cve": [
                            "any"
                        ],
                        "vendor-id": [
                            "any"
                        ],
                        "severity": [
                            "critical",
                            "high"
                        ],
                        "category": "any",
                        "action": {
                            "reset-both": "yes"
                        },
                        "packet-capture": "disable"
                    },
                    {
                        "@name": "Default-Medium-Low-Info",
                        "threat-name": "any",
                        "cve": [
                            "any"
                        ],
                        "vendor-id": [
                            "any"
                        ],
                        "severity": [
                            "medium",
                            "low",
                            "informational"
                        ],
                        "category": "any",
                        "action": {
                            "default": "yes"
                        },
                        "packet-capture": "disable"
                    }
                ]
            },
            "description": "Vulnerability protection profile for regular traffic"
        }
    }

YAML Example
------------

.. code-block:: yaml

    entry:
      "@name": "VPP-default"
      rules:
        entry:
          - "@name": "Block-Critical-High"
            threat-name: "any"
            cve:
              - "any"
            vendor-id:
              - "any"
            severity:
              - "critical"
              - "high"
            category: "any"
            action:
              reset-both: "yes"
            packet-capture: "disable"
          - "@name": "Default-Medium-Low-Info"
            threat-name: "any"
            cve:
              - "any"
            vendor-id:
              - "any"
            severity:
              - "medium"
              - "low"
              - "informational"
            category: "any"
            action:
              default: "yes"
            packet-capture: "disable"
      description: "Vulnerability protection profile for regular traffic"

Configuration Options
---------------------

Vulnerability protection profiles support the following configuration options:

Rules
^^^^^

Rules define how the firewall should handle different types of vulnerability threats:

- **threat-name**: Name of the threat to match (any, specific threat name)
- **cve**: Common Vulnerabilities and Exposures (CVE) identifiers to match (any, specific CVE IDs)
- **vendor-id**: Vendor identifiers to match (any, specific vendor IDs)
- **severity**: Severity levels to match (critical, high, medium, low, informational)
- **category**: Category of the threat to match (any, specific category)
- **action**: Action to take when a threat is detected (default, allow, alert, drop, reset-client, reset-server, reset-both, block-ip)
- **packet-capture**: Whether to capture packets when a threat is detected (disable, single-packet, extended-capture)

Other Settings
^^^^^^^^^^^^^^

- **description**: A description of the vulnerability protection profile

Implementation Details
----------------------

Vulnerability protection profiles are processed by the ``create_non_sdk_objects`` function in the ``auxiliary_functions.py`` module. This function:

1. Parses the JSON or YAML files for vulnerability protection profiles using ``parse_metadata_from_json`` or ``parse_metadata_from_yaml``
2. Constructs XML elements for each profile definition
3. Deploys the vulnerability protection profiles to the PAN-OS device using multi-config API calls

The same algorithm is used for all security profile types, providing a consistent approach to profile management across the system.
